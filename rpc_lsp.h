/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPC_LSP_H_RPCGEN
#define _RPC_LSP_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct Client {
	char *host;
	int port;
	int status;
	int id;
};
typedef struct Client Client;

struct lsp_client {
	char *payload;
	int length;
	Client client;
};
typedef struct lsp_client lsp_client;

struct lsp_message {
	int connid;
	int msg_seq_num;
	char *data;
};
typedef struct lsp_message lsp_message;

#define LSP 0x33312345
#define INITIAL_VERS 2

#if defined(__STDC__) || defined(__cplusplus)
#define write 1
extern  void * write_2(lsp_client *, CLIENT *);
extern  void * write_2_svc(lsp_client *, struct svc_req *);
#define read 2
extern  lsp_message * read_2(void *, CLIENT *);
extern  lsp_message * read_2_svc(void *, struct svc_req *);
extern int lsp_2_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define write 1
extern  void * write_2();
extern  void * write_2_svc();
#define read 2
extern  lsp_message * read_2();
extern  lsp_message * read_2_svc();
extern int lsp_2_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Client (XDR *, Client*);
extern  bool_t xdr_lsp_client (XDR *, lsp_client*);
extern  bool_t xdr_lsp_message (XDR *, lsp_message*);

#else /* K&R C */
extern bool_t xdr_Client ();
extern bool_t xdr_lsp_client ();
extern bool_t xdr_lsp_message ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPC_LSP_H_RPCGEN */
